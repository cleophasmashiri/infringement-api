entity Driver {
	firstName String,
    lastName String,
    middleName String,
    email String,
    nationalIdNumber String,
    cellNumber String,
    province String,
    city String,
    suburb String,
    streetName String,
    streetPropertyNumber String,
    unitNumber String
}

entity Vehicle {
	plateNumber String,
    make String,
    model String,
    engineNumber String,
    chassisNumber String,
    color String,
    yearFirstRegistered String
}

relationship OneToMany {
	Driver {vehicle} to Vehicle {driver},
    Infringement {infringementAction} to InfringementAction {infringement},
    Infringement to Document {infringement}
}
relationship ManyToOne {
	Infringement {driver} to Driver
	Infringement {vehicle} to Vehicle
}

entity Infringement {
	processInstanceId String,
	infringementType String,
    dateDone Instant,
    doneBy String
}

entity Document {
	name String,
    content ImageBlob
}

enum InfringementActionType {
	CREATED_INFRINGEMENT, INFRINGEMENT_NOTIFICATION_SENT, INFRINGEMENT_REMINDER_NOTIFICATION_SENT, INFRINGEMENT_ADMIN_REMINDER_NOTIFICATION_SENT, INFRINGEMENT_PAYMENT_DONE, INFRINGEMENT_DRIVER_NOMINATION, INFRINGEMENT_ASSIGN_ANOTHER_DRIVER, INFRINGEMENT_CANCEL, INFRINGEMENT_CREATED_COURT_CASE, INFRINGEMENT_ASSIGN_DRIVER
}
entity InfringementAction {
	processInstanceId String,
    notes String,
	infringementActionType InfringementActionType,
    dateDone Instant,
    doneBy String
}

// Set pagination options
paginate Infringement, Driver, Vehicle with infinite-scroll

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except InfringementAction, Document

// Set an angular suffix
// angularSuffix * with mySuffix
